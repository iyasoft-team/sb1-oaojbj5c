// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuranApi.Contexts;

#nullable disable

namespace QuranApi.Migrations
{
    [DbContext(typeof(SchoolDbCtx))]
    [Migration("20250710085830_Renaming")]
    partial class Renaming
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuranModels.AyahEval", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AyahNumber")
                        .HasColumnType("int");

                    b.Property<int>("RecitationStatus")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SurahNumber")
                        .HasColumnType("int");

                    b.Property<int>("TasmiiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TasmiiId");

                    b.ToTable("AyahEvals");
                });

            modelBuilder.Entity("QuranModels.LastProgress", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("AyahNumber")
                        .HasColumnType("int");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<int>("SurahNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WordIndex")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.ToTable("LastProgress");
                });

            modelBuilder.Entity("QuranModels.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("QuranModels.ParticipationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("SessionScheduleId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionScheduleId");

                    b.HasIndex("StudentId");

                    b.ToTable("ParticipationTemplate");
                });

            modelBuilder.Entity("QuranModels.SessionDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionScheduleId");

                    b.HasIndex("StudentId");

                    b.ToTable("SessionDays");
                });

            modelBuilder.Entity("QuranModels.SessionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Recurrence")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<bool>("ToEndOfYear")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SessionSchedules");
                });

            modelBuilder.Entity("QuranModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("QuranModels.TajweedEval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ayah")
                        .HasColumnType("int")
                        .HasColumnName("Ayah");

                    b.Property<int>("End")
                        .HasColumnType("int")
                        .HasColumnName("TEnd");

                    b.Property<int>("Evaluation")
                        .HasColumnType("int");

                    b.Property<string>("Rule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRule");

                    b.Property<int>("Start")
                        .HasColumnType("int")
                        .HasColumnName("TStart");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Surah")
                        .HasColumnType("int")
                        .HasColumnName("Surah");

                    b.Property<int>("TasmiiId")
                        .HasColumnType("int");

                    b.Property<int>("WordIndex")
                        .HasColumnType("int")
                        .HasColumnName("WordIndex");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TasmiiId");

                    b.ToTable("TajweedEval");
                });

            modelBuilder.Entity("QuranModels.Tasmii", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationId")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("Tasmii");
                });

            modelBuilder.Entity("QuranModels.AyahEval", b =>
                {
                    b.HasOne("QuranModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Tasmii", "Tasmii")
                        .WithMany("AyahEvals")
                        .HasForeignKey("TasmiiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tasmii");
                });

            modelBuilder.Entity("QuranModels.LastProgress", b =>
                {
                    b.HasOne("QuranModels.Student", "Student")
                        .WithOne("LastProgress")
                        .HasForeignKey("QuranModels.LastProgress", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QuranModels.Participation", b =>
                {
                    b.HasOne("QuranModels.SessionDay", "Session")
                        .WithMany("Participants")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QuranModels.ParticipationTemplate", b =>
                {
                    b.HasOne("QuranModels.SessionSchedule", "SessionSchedule")
                        .WithMany("DefaultParticipants")
                        .HasForeignKey("SessionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionSchedule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QuranModels.SessionDay", b =>
                {
                    b.HasOne("QuranModels.SessionSchedule", "SessionSchedule")
                        .WithMany("SessionDays")
                        .HasForeignKey("SessionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Student", null)
                        .WithMany("Sessions")
                        .HasForeignKey("StudentId");

                    b.Navigation("SessionSchedule");
                });

            modelBuilder.Entity("QuranModels.TajweedEval", b =>
                {
                    b.HasOne("QuranModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Tasmii", "Tasmii")
                        .WithMany("TajweedEvals")
                        .HasForeignKey("TasmiiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tasmii");
                });

            modelBuilder.Entity("QuranModels.Tasmii", b =>
                {
                    b.HasOne("QuranModels.Participation", "Participation")
                        .WithOne("Tasmii")
                        .HasForeignKey("QuranModels.Tasmii", "ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuranModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("QuranModels.Participation", b =>
                {
                    b.Navigation("Tasmii");
                });

            modelBuilder.Entity("QuranModels.SessionDay", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("QuranModels.SessionSchedule", b =>
                {
                    b.Navigation("DefaultParticipants");

                    b.Navigation("SessionDays");
                });

            modelBuilder.Entity("QuranModels.Student", b =>
                {
                    b.Navigation("LastProgress");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("QuranModels.Tasmii", b =>
                {
                    b.Navigation("AyahEvals");

                    b.Navigation("TajweedEvals");
                });
#pragma warning restore 612, 618
        }
    }
}
